<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox.Text" xml:space="preserve">
    <value>Программа Метод отбора.exe является реализацией метода моделирования распределений случайных величин . 
Она предназначена для решения задач связанных с моделированием с.в.. 
Особенность программы состоит в методе моделирования.

Инструкция по использованию:
В классе "Otbor" напишите свои плотности p, q, моделирующую формулу для eta,  функцию распределения плотности F от p, функцию r = p(x)/q(x), F и r не обязательны, 
но нужно выбрать соответственные параметры в окне  «Сервис | Параметры».
Промежуток нужно вводить в соответствии с распределением во избежание ошибок.
- Можно задать некоторые параметры вручную в окне «Сервис | Параметры»
- Данные из таблицы можно сохранить в формате XML 
- График можно скопировать в буфер и сохранить.

Нажмите кнопку «Генерировать» чтобы заполнить таблицу значениями случайных величин в вашем заданном промежутке.
Нажмите кнопку «Выполнить» чтобы вычислить статистику хи-квадрат, уровень значимости хи-квадрат и нарисовать график.
Результаты работы программы записываются в поля статистика хи-квадрат и уровень значимости хи-квадрат. 
С помощью значков возле кнопки «Генерировать»  выводится информация о  произошедших ошибках.

Для работы с проектом программы требуется Microsoft Visual Studio 2010.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/Pz8AAtuCwAKWAoACkMKAAo8CgANSg0ACjkKAAo2CgAKMwoAEj4SABM7EwAUPRQAFDoUACtU
        KwBBX0EAUmxSAGWEZQBcd1wAWHFYAGh8aACRpZEAjpyOAIeUhwCQnJAA8PjwAPf79wD1+fUAvL+8AMPG
        wwAOnBAADYsOAAt0DAAQoBQAEaIUAA6EEQARmhUAE6QXAAtfDAAUpRcAFKMYABWmGQAObxAAFqcaABKL
        FQARfhQAFJEXABJ0FQAPVRAAFlgXABNGFAAwbzEAEqMXABSlGQAVphoAFqccABeoHQAYqh8AGasgABaR
        GwAQZhMAFHMYACCDJQCHnogAF6kfABmrIgAarCMAGqsjABusJQAcrSUAHK0mAB2uKAAdricAHKcmAB6v
        KQAYjB8AH7ApAB+wKgAgsSoAFngcACGyKwAhsiwAIrMtAEnAUgBSh1UAjLSPAB6hKQAcliYAIrMuACO0
        MAAjtC8AIassACS1MAAltjEAJbYzACa3MwAmtTIAJbIxACe4NQAntzQAJagyACScMABBv0wAWchkAHDO
        eABbmWAAaqpvAKfhrADG6ckAyOrLANHv1AAouTcAKbo5ACm5OAAqvDsAKrs5ACq7OgAosTcAK708ACy+
        PgAsvj0ALr8/ACy2PQAywEMAMao+AFi8ZABpyHQAhtmPAKjkrwC96cIAwOnFAC6/QQAvwEIAMMFDADHC
        RQAyw0UAMsNGADPERwAzxEgANMVIADK9RAA2x0sANsNIADrGTQBBylUASctcAGvTegCM3JcAd7uAAPL5
        8wA0xUoANcZLADbHTQA3yE0AN8hOADjJTwA5yk8AOstSADrLUQA8zVMAPM1UADvMUgA9z1YAPclTADy9
        UABFzVoAUMxjAFTSaQBy14EAf9uNAJnipACaxqEAye/PALzCvQD0+vUAP9FaAD/RWQBA0VwAQNFbAEHS
        XABC0V0ARNFfAEnTYwBk2HkAdcmEAJ7orACy670Awu7KAOz37gBC018ARNViAETVYQBF1mMARtdkAEbX
        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
        AD/+AAB//wAA///gB///////
</value>
  </data>
</root>